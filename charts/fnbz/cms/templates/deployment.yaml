{{- /*
Copyright VMware, Inc.
SPDX-License-Identifier: APACHE-2.0
*/}}

apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: %%COMPONENT_NAME%%
  {{- if or .Values.cms.deploymentAnnotations .Values.commonAnnotations }}
  {{- $annotations := include "common.tplvalues.merge" (dict "values" .Values.cms.deploymentAnnotations .Values.commonAnnotations "context" .) | fromYaml }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.cms.autoscaling.enabled }}
  replicas: {{ .Values.cms.replicaCount }}
  {{- end }}
  {{- if .Values.cms.updateStrategy }}
  strategy: {{- toYaml .Values.cms.updateStrategy | nindent 4 }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" (dict "values" .Values.cms.podLabels .Values.commonLabels "context" .) | fromYaml }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: %%COMPONENT_NAME%%
  template:
    metadata:
      {{- if .Values.cms.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.cms.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: %%COMPONENT_NAME%%
    spec:
      serviceAccountName: {{ template "fnb.serviceAccountName" . }}
      {{- include "fnb.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.cms.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.cms.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.cms.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.cms.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.cms.podAffinityPreset "component" "%%COMPONENT_NAME%%" "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.cms.podAntiAffinityPreset "component" "%%COMPONENT_NAME%%" "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.cms.nodeAffinityPreset.type "key" .Values.cms.nodeAffinityPreset.key "values" .Values.cms.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.cms.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.cms.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.cms.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.cms.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.cms.priorityClassName }}
      priorityClassName: {{ .Values.cms.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.cms.schedulerName }}
      schedulerName: {{ .Values.cms.schedulerName | quote }}
      {{- end }}
      {{- if .Values.cms.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.cms.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.cms.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.cms.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.cms.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.cms.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
        - name: volume-permissions
          image: {{ include "fnb.volumePermissions.image" . }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
          command:
            - %%commands%%
          securityContext: {{- include "common.tplvalues.render" (dict "value" .Values.volumePermissions.containerSecurityContext "context" $) | nindent 12 }}
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: foo
              mountPath: {{ .Values.persistence.mountPath }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
        {{- end }}
        {{- if .Values.cms.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.cms.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: %%CONTAINER_NAME%%
          image: {{ template "fnb.image" . }}
          imagePullPolicy: {{ .Values.cms.image.pullPolicy }}
          {{- if .Values.cms.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.cms.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.cms.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.cms.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.cms.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.cms.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" (or .Values.cms.image.debug .Values.diagnosticMode.enabled) | quote }}
            - name: foo
              value: bar
            {{- if .Values.cms.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.cms.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.cms.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.cms.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.cms.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.cms.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.cms.resources }}
          resources: {{- toYaml .Values.cms.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.cms.containerPorts.http }}
            - name: https
              containerPort: {{ .Values.cms.containerPorts.https }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.cms.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.cms.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.cms.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.cms.livenessProbe "enabled") "context" $) | nindent 12 }}
            %%httpGet || command || etc%%
          {{- end }}
          {{- if .Values.cms.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.cms.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.cms.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.cms.readinessProbe "enabled") "context" $) | nindent 12 }}
            %%httpGet || command || etc%%
          {{- end }}
          {{- if .Values.cms.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.cms.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.cms.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.cms.startupProbe "enabled") "context" $) | nindent 12 }}
            %%httpGet || command || etc%%
          {{- end }}
          {{- end }}
          {{- if .Values.cms.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.cms.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: foo
              mountPath: {{ .Values.persistence.mountPath }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
          {{- if .Values.cms.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.cms.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.cms.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.cms.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: foo
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ default (include "common.names.fullname" .) .Values.persistence.existingClaim }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.cms.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.cms.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
