#########################################################

replicaCount: 1
image:
  repository: registry.hub.docker.com/tiktzuki/fnb-cms-counter-fe
  tag: "uni-dev"

imagePullSecrets: []
nameOverride: "fnb-cms-counter-fe"
fullnameOverride: "fnb-cms-counter-fe"
namespaceOverride: ""


service:
  type: ClusterIP
  ports:
    - name: http
      targetPort: 80
      protocol: TCP
      port: 80

deployment:
  command: ""
  args: ""
  annotations:
    keel.sh/policy: force

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

envFrom: []
  # - configMapRef:
  #     name: config
persistence:
  enabled: false

  create:
    enabled: false
    mountPath: /root
    accessMode: ReadWriteOnce
    size: 50Mi
    storageClass: local

  existingClaim:
    enabled: false
    volumeMounts: 
      - name: "rd"
        mountPath: "/app"
      - name: "rd-config"
        mountPath: /scripts/setup.sh
    volumes:
      - name: "rd"
        persistentVolumeClaim:
          claimName: "rd"
      - name: "rd-configmap"
        configMap:
          name: "config"
          defaultMode: 0777


#########################################################

initContainers: []
  # - name: init-test
  #   image: ubuntu:20.04
  #   command: ['echo', 'hello-world']

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000



ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

tolerations: []

affinity: {}

livenessProbe:
  enabled: true

  initialDelaySeconds: 25
  periodSeconds: 20
  timeoutSeconds: 120
  successThreshold: 1
  failureThreshold: 3

  setting:
    # exec:
    #   command: 
    #   - cat
    #   - /tmp/health
    httpGet:
      path: /
      port: http
    #   httpHeaders: []
    # tcpSocket:
    #   port: http

    
readinessProbe:
  enabled: true

  initialDelaySeconds: 25
  periodSeconds: 10
  timeoutSeconds: 150
  successThreshold: 1
  failureThreshold: 3

  setting:
    # exec:
    #   command: 
    #   - cat
    #   - /tmp/health
    httpGet:
      path: /
      port: http
    #   httpHeaders: []
    # tcpSocket:
    #   port: http


startupProbe:
  enabled: false

  initialDelaySeconds: 
  periodSeconds: 
  timeoutSeconds: 
  successThreshold: 
  failureThreshold: 

  setting:
    #exec:
      # command: 
      # - cat
      # - /tmp/health
    # httpGet:
    #   path: /health
    #   port: http
    #   httpHeaders: []
    # tcpSocket:
    #   port: http

